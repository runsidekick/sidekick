<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>sidekick-broker</artifactId>
        <groupId>com.runsidekick</groupId>
        <version>0.0.2-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sidekick-broker-app</artifactId>
    <dependencies>
        <dependency>
            <groupId>com.runsidekick</groupId>
            <artifactId>sidekick-broker-core</artifactId>
        </dependency>
        <!-- ========================================== -->

        <!-- 3rd party dependencies                     -->
        <!-- ========================================== -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jodd</groupId>
            <artifactId>jodd-core</artifactId>
        </dependency>
        <!-- ========================================== -->

        <!-- Test dependencies                          -->
        <!-- ========================================== -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-junit-jupiter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.thundra.swark</groupId>
            <artifactId>thundra-env-utils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.thundra.swark</groupId>
            <artifactId>thundra-env-utils</artifactId>
            <scope>test</scope>
            <type>test-jar</type>
        </dependency>
        <!-- ========================================== -->
    </dependencies>
    <build>
        <finalName>sidekick-broker-app</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>assembly-on-package</id>
                                <configuration>
                                    <descriptor>src/main/resources/assembly/bin.xml</descriptor>
                                    <finalName>${project.build.finalName}</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                </configuration>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
<!--        <profile>-->
<!--            <id>release</id>-->
<!--            <activation>-->
<!--                <activeByDefault>false</activeByDefault>-->
<!--            </activation>-->
<!--            <properties>-->
<!--                <docker.image.prefix>runsidekick</docker.image.prefix>-->
<!--            </properties>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    <plugin>-->
<!--                        <groupId>com.spotify</groupId>-->
<!--                        <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                        <version>1.4.13</version>-->
<!--                        <configuration>-->
<!--                            <repository>${docker.image.prefix}/${project.parent.artifactId}</repository>-->
<!--                            <tag>latest</tag>-->
<!--                            <buildArgs>-->
<!--                                <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
<!--                            </buildArgs>-->
<!--                        </configuration>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
    </profiles>

</project>